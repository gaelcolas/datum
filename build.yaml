---
####################################################
#          ModuleBuilder Configuration             #
####################################################
# Path to the Module Manifest to build (where path will be resolved from)
# SourcePath: ./Sampler/Sampler.psd1
# Output Directory where ModuleBuilder will build the Module, relative to module manifest
# OutputDirectory: ../output/Sampler
CopyPaths:
  - en-US
  - ScriptsToProcess

Encoding: UTF8 # With BOM in WinPS, noBOM in PSCore.

# Suffix to add to Root module PSM1 after merge (here, the Set-Alias exporting IB tasks)
# suffix: suffix.ps1
# prefix: prefix.ps1
VersionedOutputDirectory: true

####################################################
#      ModuleBuilder Submodules Configuration      #
####################################################

# NestedModule:
#   HelperSubmodule: # This is the first submodule to build into the output
#     Path: ./Sampler/Modules/HelperSubmodule/HelperSubmodule.psd1
#     # $ModuleVersionFolder is trimmed (remove -.*) and OutputDirectory expanded (the only one)
#     OutputDirectory: ./output/Sampler/$ModuleVersionFolder/Modules/HelperSubmodule
#     VersionedOutputDirectory: false
#     # suffix:
#     # prefix:

####################################################
#       Sampler Pipeline Configuration             #
####################################################
# Defining 'Workflows' (suite of InvokeBuild tasks) to be run using their alias
BuildWorkflow:
  '.': # "." is the default Invoke-Build workflow. It is called when no -Tasks is specified to the build.ps1
    - build
    - test

  debug: |
    {
        $pass = 'SomeSecret' | ConvertTo-SecureString -AsPlainText -Force
        $enc = 'PE9ianMgVmVyc2lvbj0iMS4xLjAuMSIgeG1sbnM9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vcG93ZXJzaGVsbC8yMDA0LzA0Ij4NCiAgPE9iaiBSZWZJZD0iMCI+DQogICAgPFROIFJlZklkPSIwIj4NCiAgICAgIDxUPlN5c3RlbS5NYW5hZ2VtZW50LkF1dG9tYXRpb24uUFNDdXN0b21PYmplY3Q8L1Q+DQogICAgICA8VD5TeXN0ZW0uT2JqZWN0PC9UPg0KICAgIDwvVE4+DQogICAgPE1TPg0KICAgICAgPE9iaiBOPSJLZXlEYXRhIiBSZWZJZD0iMSI+DQogICAgICAgIDxUTiBSZWZJZD0iMSI+DQogICAgICAgICAgPFQ+U3lzdGVtLk9iamVjdFtdPC9UPg0KICAgICAgICAgIDxUPlN5c3RlbS5BcnJheTwvVD4NCiAgICAgICAgICA8VD5TeXN0ZW0uT2JqZWN0PC9UPg0KICAgICAgICA8L1ROPg0KICAgICAgICA8TFNUPg0KICAgICAgICAgIDxPYmogUmVmSWQ9IjIiPg0KICAgICAgICAgICAgPFROUmVmIFJlZklkPSIwIiAvPg0KICAgICAgICAgICAgPE1TPg0KICAgICAgICAgICAgICA8UyBOPSJIYXNoIj4xRUZBNTk3QUVERTAyNkNCMDg2RTY4NTIwRjVDNjM2QTc3Q0U1QTNDMDA4RjhENkUxQjBEQjYyMkM5NzFCRkEyPC9TPg0KICAgICAgICAgICAgICA8STMyIE49Ikl0ZXJhdGlvbkNvdW50Ij41MDAwMDwvSTMyPg0KICAgICAgICAgICAgICA8QkEgTj0iS2V5Ij5KbHZqZDBsc2F0VDZxdFNBRXlQSGFEelhrRVJLVS82Z29rQ3QzZm4zRE1VNndSbTFiMy9RcFRBTDRBNk9BSXlsPC9CQT4NCiAgICAgICAgICAgICAgPEJBIE49Ikhhc2hTYWx0Ij5IMzYxc2ZzUENEVXk1Ri92NUN2eno1VTVQVk5KNjhuUWtQTFd5RVltRU44PTwvQkE+DQogICAgICAgICAgICAgIDxCQSBOPSJTYWx0Ij5jcHE3V1ZFRHVwWVhVbVlDbGVRWE0yVWkxN2lFa0s2ZTFrWTYyT2ZONXRJPTwvQkE+DQogICAgICAgICAgICAgIDxCQSBOPSJJViI+Q1VsZWIrbStjbHUvYVk0MmE1aWVTNWlwQWl5NEo1T2hZTmVUR1BSUkhCST08L0JBPg0KICAgICAgICAgICAgPC9NUz4NCiAgICAgICAgICA8L09iaj4NCiAgICAgICAgPC9MU1Q+DQogICAgICA8L09iaj4NCiAgICAgIDxCQSBOPSJDaXBoZXJUZXh0Ij5oLzlodnE5S2ViSnROUmE2NWc5NDVmUDlLU0FwRmYxZ3loaHBYc0s2TFBPZTF3WVRRaFFaTGRxN2lnYlJhWloydU9EeWF0d3diUFVGbFZRVWd2Tm5YWTUxNjUrbjhGYkZOUjd6bTlBWHVNVT08L0JBPg0KICAgICAgPEJBIE49IkhNQUMiPnE5R3BaZlp5U3pHaDByME1uaE1RM3V3S3ZudkdobnJxeFVneG9jS0RRUkU9PC9CQT4NCiAgICAgIDxTIE49IlR5cGUiPlN5c3RlbS5NYW5hZ2VtZW50LkF1dG9tYXRpb24uUFNDcmVkZW50aWFsPC9TPg0KICAgIDwvTVM+DQogIDwvT2JqPg0KPC9PYmpzPg=='
        Unprotect-Datum -Base64Data $enc -Password $pass | fl * -Force
    }


  build:
    - Clean
    - debug
    - Build_Module_ModuleBuilder
    - Build_NestedModules_ModuleBuilder
    - Create_changelog_release_output

  pack:
    - build
    - package_module_nupkg

  hqrmtest:
    - DscResource_Tests_Stop_On_Fail

  # defining test task to be run when invoking `./build.ps1 -Tasks test`
  test:
    - Pester_Tests_Stop_On_Fail
    - Pester_if_Code_Coverage_Under_Threshold
    # Use this task when you have multiple parallel tests, which produce multiple
    # code coverage files and needs to get merged into one file.
    #- Merge_CodeCoverage_Files

  publish:
    - Publish_release_to_GitHub
    - publish_module_to_gallery # runs if nuget is not available

####################################################
#       PESTER  Configuration                      #
####################################################

Pester: #Passthru, OutputFile, CodeCoverageOutputFile not supported
  OutputFormat: NUnitXML
  # Will look at every *.ps1 & *.psm1 under ModulePath, excepts when $_.FullName -match (Join-Path $ProjectPath $ExcludeFromCodeCoverageItem)
  ExcludeFromCodeCoverage:
    # - Template
  # Default is to use the tests folder in the project folder or source folder (if present)
  # can use it to prioritize: tests/QA, tests/Unit, tests/Integration
  Script:
  # - tests/QA/module.tests.ps1
  # - tests/QA
  # - tests/Unit
  # - tests/Integration
  ExcludeTag:
    - helpQuality
    - FunctionalQuality
    - TestQuality
  Tag:
  CodeCoverageThreshold: 0 # Set to 0 to bypass
  # CodeCoverageOutputFile: JaCoCo_$OsShortName.xml
  # CodeCoverageOutputFileEncoding: ascii
  # CodeCoverageMergedOutputFile: JaCoCo_Merged.xml
DscTest:
  ExcludeTag:
    - 'Common Tests - New Error-Level Script Analyzer Rules'

ModuleBuildTasks:
  Sampler:
    - '*.build.Sampler.ib.tasks' # this means: import (dot source) all aliases ending with .ib.tasks exported by sampler module
  Sampler.GitHubTasks:
    - '*.ib.tasks'

# Invoke-Build Header to be used to 'decorate' the terminal output of the tasks.
TaskHeader: |
  param($Path)
  ""
  "=" * 79
  Write-Build Cyan "`t`t`t$($Task.Name.replace("_"," ").ToUpper())"
  Write-Build DarkGray  "$(Get-BuildSynopsis $Task)"
  "-" * 79
  Write-Build DarkGray "  $Path"
  Write-Build DarkGray "  $($Task.InvocationInfo.ScriptName):$($Task.InvocationInfo.ScriptLineNumber)"
  ""

GitHubConfig:
  GitHubFilesToAdd:
    - 'CHANGELOG.md'
  GitHubConfigUserName: gaelcolas
  GitHubConfigUserEmail: psgallery@synedgy.com
  UpdateChangelogOnPrerelease: false
